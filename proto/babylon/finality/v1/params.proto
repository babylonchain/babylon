syntax = "proto3";
package babylon.finality.v1;

import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/babylonchain/babylon/x/finality/types";

// Params defines the parameters for the module.
message Params {
  option (gogoproto.goproto_stringer) = false;
  // signed_blocks_window defines the size of the sliding window for tracking finality provider liveness
  int64 signed_blocks_window  = 1;
  // min_signed_per_window defines the minimum number of blocks that a finality provider is required to sign
  // within the sliding window to avoid being detected as inactive
  bytes min_signed_per_window = 2 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  // min_pub_rand is the minimum number of public randomness each
  // message should commit
  uint64 min_pub_rand = 4;
}
